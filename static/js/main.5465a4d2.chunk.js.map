{"version":3,"sources":["img/logo.png","img/logo2.png","componment/Times.js","App.js","reportWebVitals.js","index.js"],"names":["Times","useState","dates","setDates","times","setTimes","useEffect","setTimeout","setDatesz","Date","toLocaleDateString","setTimesz","toLocaleTimeString","App","pm_1","setPm_1","pm_25","setPm_25","pm_10","setPm_10","temp","setTemp","hum","setTHum","data5","lastshow","setLastshow","lastshow2","setLastshow2","fechdata","getlastdata","axios","get","api","then","res","data","log_pm1","log_pm25","log_pm10","log_temperature","log_humidity","datanew","map","key","date","log_time","toLocaleString","push","id","console","log","className","src","logo","logo2","padding","autoFit","shape","point","area","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5465a4d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c237d3b9.png\";","export default __webpack_public_path__ + \"static/media/logo2.a89ca52f.png\";","// import React from \"react\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction Times() {\r\n  const [dates, setDates] = useState(\"\");\r\n  const [times, setTimes] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const setDatesz = new Date().toLocaleDateString();\r\n      const setTimesz = new Date().toLocaleTimeString();\r\n      setDates(setDatesz);\r\n      setTimes(setTimesz);\r\n    }, 1000);\r\n  });\r\n  return (\r\n      <h2>\r\n        {dates} : {times}\r\n      </h2>\r\n  );\r\n}\r\n\r\nexport default Times;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport logo from \"./img/logo.png\";\nimport logo2 from \"./img/logo2.png\";\nimport { api } from \"./api.js\";\nimport axios from \"axios\";\nimport { Chart, LineAdvance } from \"bizcharts\";\nimport Times from \"./componment/Times\";\n\nfunction App() {\n  const [pm_1, setPm_1] = useState();\n  const [pm_25, setPm_25] = useState();\n  const [pm_10, setPm_10] = useState();\n  const [temp, setTemp] = useState();\n  const [hum, setTHum] = useState();\n  const [data5,setData5] = useState()\n  const [lastshow, setLastshow] = useState([]);\n  const [lastshow2, setLastshow2] = useState([]);\n\n  const fechdata = () => {\n    getlastdata();\n    // axios.get(api + `lastdata`).then((res) => {\n    //   const { data } = res;\n    //   setData5(data);\n    //   setPm_1(data[0].log_pm1);\n    //   setPm_25(data[0].log_pm25);\n    //   setPm_10(data[0].log_pm10);\n    //   setTemp(data[0].log_temperature);\n    //   setTHum(data[0].log_humidity);\n    // });\n  };\n\n  useEffect(() => {\n    fechdata();\n  }, []);\n  const getlastdata = () => {\n    axios.get(api + `lastdata/10`).then((res) => {\n      const { data } = res;\n      if (data === \" \") {\n      } else {\n        setLastshow2(data);\n          setPm_1(data[0].log_pm1);\n          setPm_25(data[0].log_pm25);\n          setPm_10(data[0].log_pm10);\n          setTemp(data[0].log_temperature);\n          setTHum(data[0].log_humidity);\n      }\n    });\n  };\n  var datanew = [];\n  useEffect(() => {\n    try {\n      datanew = [];\n      lastshow2.map((res, key) => {\n        const d = new Date(res.log_time);\n        const date = d.toLocaleString();\n        datanew.push({\n          id: res.id,\n          log_pm1: res.log_pm1,\n          log_pm25: res.log_pm25,\n          log_pm10: res.log_pm10,\n          log_temperature: res.log_temperature,\n          log_humidity: res.log_humidity,\n          log_time: date,\n        });\n        setLastshow(datanew);\n      });\n    } catch {\n      fechdata();\n    }\n  }, [lastshow2]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      fechdata();\n    }, 1000);\n  });\n  console.log(data5)\n\n  // if (lastshow.length == 0) return ;\n  // if (lastshow2.length == 0) return;\n  return (\n    <div className=\"App\">\n      <div className=\"cont\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"show-PM\">\n              <img src={logo} />\n              <img src={logo2} />\n              <br />\n\n              <br />\n              <br />\n              <Times />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"show-data\">\n              <div className=\"show-data-item bg1\">\n                <h1>ค่าฝุ่น PM 1</h1>\n                <p>{pm_1} µg./m3</p>\n              </div>\n              <div className=\"chart\">\n                <Chart padding={[15, 15, 30, 30]} autoFit data={lastshow}>\n                  <LineAdvance\n                    shape=\"smooth\"\n                    point\n                    area\n                    position=\"log_time*log_pm1\"\n                  />\n                </Chart>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"show-data\">\n              <div className=\"show-data-item bg2\">\n                <h1>ค่าฝุ่น PM 2.5</h1>\n                <p>{pm_25} µg./m3</p>\n              </div>\n              <div className=\"chart\">\n                <Chart padding={[15, 15, 30, 30]} autoFit data={lastshow}>\n                  <LineAdvance\n                    shape=\"smooth\"\n                    point\n                    area\n                    position=\"log_time*log_pm25\"\n                  />\n                </Chart>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"show-data\">\n              <div className=\"show-data-item bg3\">\n                <h1> ค่าฝุ่น PM 10</h1>\n                <p>{pm_10} µg./m3</p>\n              </div>\n              <div className=\"chart\">\n                <Chart padding={[15, 15, 30, 30]} autoFit data={lastshow}>\n                  <LineAdvance\n                    shape=\"smooth\"\n                    point\n                    area\n                    position=\"log_time*log_pm10\"\n                  />\n                </Chart>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"show-data\">\n              <div className=\"show-data-item bg4\">\n                <h1>อุณหภูมิ</h1>\n                <p>{temp} °C</p>\n              </div>\n              <div className=\"chart\">\n                <Chart padding={[15, 15, 30, 30]} autoFit data={lastshow}>\n                  <LineAdvance\n                    shape=\"smooth\"\n                    point\n                    area\n                    position=\"log_time*log_temperature\"\n                  />\n                </Chart>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"show-data\">\n              <div className=\"show-data-item bg5\">\n                <h1>ความชื้น</h1>\n                <p>{hum} %</p>\n              </div>\n              <div className=\"chart\">\n                <Chart padding={[15, 15, 30, 30]} autoFit data={lastshow}>\n                  <LineAdvance\n                    shape=\"smooth\"\n                    point\n                    area\n                    position=\"log_time*log_humidity\"\n                  />\n                </Chart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}